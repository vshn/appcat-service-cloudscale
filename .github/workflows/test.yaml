name: Test

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

env:
  KIND_CMD: kind # kind is pre-installed in GitHub runners
  KUBECONFIG: 'kindev/.kind/kind-kubeconfig-v1.23.0'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            .work
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - uses: actions/setup-go@v3
        with:
          go-version: '1.17'

      - name: Install goimports
        run: go install golang.org/x/tools/cmd/goimports@latest

      - name: Generate
        run: make generate

      - name: Crossplane setup
        working-directory: kindev
        run: make crossplane-setup

      - name: Install CRD for provider config
        run: kubectl apply -f package/crds/cloudscale.jet.crossplane.io_providerconfigs.yaml

      - name: Install CRD for provider config usages
        run: kubectl apply -f package/crds/cloudscale.jet.crossplane.io_providerconfigusages.yaml

      - name: Install CRD for store configs
        run: kubectl apply -f package/crds/cloudscale.jet.crossplane.io_storeconfigs.yaml

      - name: Install CRD for cloudscale objects user
        run: kubectl apply -f package/crds/objects.cloudscale.jet.crossplane.io_users.yaml


  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            .work
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - uses: actions/setup-go@v3
        with:
          go-version: '1.17'

      - name: Install goimports
        run: go install golang.org/x/tools/cmd/goimports@latest

      - name: Generate
        run: make generate

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Push image
        run: |
          docker tag provider-jet-cloudscale:latest
          docker tag provider-jet-cloudscale-controller:latest
          docker push provider-jet-cloudscale:latest
          docker push provider-jet-cloudscale-controller:latest
